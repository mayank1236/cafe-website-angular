{"ast":null,"code":"import { __awaiter } from 'tslib';\nimport Critters from 'critters';\nimport * as fs from 'fs';\n\nclass CrittersExtended extends Critters {\n  constructor(optionsExtended, resourceCache) {\n    super({\n      logger: {\n        warn: s => this.warnings.push(s),\n        error: s => this.errors.push(s),\n        info: () => {}\n      },\n      logLevel: 'warn',\n      path: optionsExtended.outputPath,\n      publicPath: optionsExtended.deployUrl,\n      compress: !!optionsExtended.minify,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      preload: 'media',\n      noscriptFallback: true,\n      inlineFonts: true\n    });\n    this.optionsExtended = optionsExtended;\n    this.resourceCache = resourceCache;\n    this.warnings = [];\n    this.errors = [];\n  }\n\n  readFile(path) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let resourceContent = this.resourceCache.get(path);\n\n      if (resourceContent === undefined) {\n        resourceContent = yield fs.promises.readFile(path, 'utf-8');\n        this.resourceCache.set(path, resourceContent);\n      }\n\n      return resourceContent;\n    });\n  }\n\n}\n\nclass InlineCriticalCssProcessor {\n  constructor(options) {\n    this.options = options;\n    this.resourceCache = new Map();\n  }\n\n  process(html, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const critters = new CrittersExtended(Object.assign(Object.assign({}, this.options), options), this.resourceCache);\n      const content = yield critters.process(html);\n      return {\n        content,\n        errors: critters.errors.length ? critters.errors : undefined,\n        warnings: critters.warnings.length ? critters.warnings : undefined\n      };\n    });\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { InlineCriticalCssProcessor as ÉµInlineCriticalCssProcessor }; //# sourceMappingURL=tools.mjs.map","map":null,"metadata":{},"sourceType":"module"}